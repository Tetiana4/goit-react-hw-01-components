{"version":3,"sources":["components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["Profile","props","name","tag","location","avatar","stats","class","src","alt","followers","views","likes","Statistics","title","map","item","label","percentage","FriendList","friends","isOnline","width","TransactionHistory","type","amount","currency","App","user","statisticalData","items","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0yGAEe,SAASA,EAAQC,GAC9B,IAAQC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,IAAKC,EAA4BH,EAA5BG,SAAUC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,MACrC,OACE,sBAAKC,MAAM,UAAX,UACE,sBAAKA,MAAM,cAAX,UACE,qBAAKC,IAAKH,EAAQI,IAAI,gHAAsBF,MAAM,WAClD,mBAAGA,MAAM,OAAT,SAAiBL,IACjB,mBAAGK,MAAM,MAAT,SAAgBJ,IAChB,mBAAGI,MAAM,WAAT,SAAqBH,OAGvB,qBAAIG,MAAM,QAAV,UACE,+BACE,sBAAMA,MAAM,QAAZ,uBACA,sBAAMA,MAAM,WAAZ,SAAwBD,EAAMI,eAEhC,+BACE,sBAAMH,MAAM,QAAZ,mBACA,sBAAMA,MAAM,WAAZ,SAAwBD,EAAMK,WAEhC,+BACE,sBAAMJ,MAAM,QAAZ,mBACA,sBAAMA,MAAM,WAAZ,SAAwBD,EAAMM,iB,kBCtBzB,SAASC,EAAWZ,GACjC,IAAQa,EAAiBb,EAAjBa,MAAOR,EAAUL,EAAVK,MACf,OACE,0BAASC,MAAM,aAAf,UACE,oBAAIA,MAAM,QAAV,SAAmBO,IAEnB,oBAAIP,MAAM,YAAV,SACGD,EAAMS,KAAI,SAACC,GAAD,OACT,qBAAIT,MAAM,OAAV,UACE,sBAAMA,MAAM,QAAZ,SAAqBS,EAAKC,QAC1B,uBAAMV,MAAM,aAAZ,UAA0BS,EAAKE,WAA/B,kB,WCVG,SAASC,EAAT,GAAkC,IAAZC,EAAW,EAAXA,QACnC,OACE,6BACGA,EAAQL,KAAI,SAAAC,GAAI,OACf,qBAAIT,MAAM,OAAV,UACE,sBAAMA,MAAM,SAAZ,SAAsBS,EAAKK,WAC3B,qBAAKd,MAAM,SAASC,IAAKQ,EAAKX,OAAQI,IAAKO,EAAKd,KAAMoB,MAAM,OAC5D,mBAAGf,MAAM,OAAT,SAAiBS,EAAKd,e,WCPjB,SAASqB,EAAT,GAAyD,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SACzD,OACE,wBAAOnB,MAAM,sBAAb,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCAEE,+BACE,6BAAKiB,IACL,6BAAKC,IACL,6BAAKC,YCiBA,SAASC,IACtB,OACE,qCACE,cAAC3B,EAAD,CACEE,KAAM0B,EAAK1B,KACXC,IAAKyB,EAAKzB,IACVC,SAAUwB,EAAKxB,SACfC,OAAQuB,EAAKvB,OACbC,MAAOsB,EAAKtB,QAEd,cAACO,EAAD,CAAYC,MAAM,eAAeR,MAAOuB,IACxC,cAACV,EAAD,CAAYC,QAASA,IACrB,cAACG,EAAD,CAAoBO,MAAOC,IAV7B,OCrCJ,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChB,EAAD,MAEFiB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a503c92a.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nexport default function Profile(props) {\r\n  const { name, tag, location, avatar, stats } = props;\r\n  return (\r\n    <div class=\"profile\">\r\n      <div class=\"description\">\r\n        <img src={avatar} alt=\"Аватар пользователя\" class=\"avatar\" />\r\n        <p class=\"name\">{name}</p>\r\n        <p class=\"tag\">{tag}</p>\r\n        <p class=\"location\">{location}</p>\r\n      </div>\r\n\r\n      <ul class=\"stats\">\r\n        <li>\r\n          <span class=\"label\">Followers</span>\r\n          <span class=\"quantity\">{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span class=\"label\">Views</span>\r\n          <span class=\"quantity\">{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span class=\"label\">Likes</span>\r\n          <span class=\"quantity\">{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.object.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function Statistics(props) {\r\n  const { title, stats } = props;\r\n  return (\r\n    <section class=\"statistics\">\r\n      <h2 class=\"title\">{title}</h2>\r\n\r\n      <ul class=\"stat-list\">\r\n        {stats.map((item) => (\r\n          <li class=\"item\">\r\n            <span class=\"label\">{item.label}</span>\r\n            <span class=\"percentage\">{item.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  tittle: PropTypes.string,\r\n  stats: PropTypes.array.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function FriendList({ friends }) {\r\n  return (\r\n    <ul>\r\n      {friends.map(item => (\r\n        <li class=\"item\">\r\n          <span class=\"status\">{item.isOnline}</span>\r\n          <img class=\"avatar\" src={item.avatar} alt={item.name} width=\"48\" />\r\n          <p class=\"name\">{item.name}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  id: PropTypes.number,\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n  isOnline: PropTypes.bool,\r\n};\r\n\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function TransactionHistory({ type, amount, currency }) {\r\n  return (\r\n    <table class=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {/* {items.map((item) => ( */}\r\n        <tr>\r\n          <td>{type}</td>\r\n          <td>{amount}</td>\r\n          <td>{currency}</td>\r\n        </tr>\r\n        {/* ))} */}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.number.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n};\r\n","// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport Profile from \"./components/Profile/Profile\";\nimport user from \"./components/user.json\";\nimport statisticalData from \"./components/statistical-data.json\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport friends from \"./components/friends.json\";\nimport FriendList from \"./components/FriendList/FriendList\";\nimport transactions from \"./components/transaction.json\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\n\nexport default function App() {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n      {/* <Statistics stats={statisticalData.stats} /> */}\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}