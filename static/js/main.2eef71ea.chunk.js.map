{"version":3,"sources":["components/Profile/Profile.styled.js","components/Profile/Profile.js","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.js","components/FriendList/FriendList.styled.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.styled.js","components/TransactionHistory/TransactionHistory.js","App/App.styled.js","App/App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Image","img","Description","Name","p","List","ul","Span","span","Profile","name","tag","location","avatar","stats","class","src","alt","followers","views","likes","section","Title","h2","ListItem","li","Statistics","title","map","item","label","Type","percentage","id","Status","FriendList","friends","isOnline","width","Table","table","th","Body","tbody","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2eef71ea.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 50px;\r\n  margin: auto;\r\n  background-color: #eae3c8;\r\n  border-radius: 10%;\r\n  width: 250px;\r\n  box-shadow: 5px 5px 10px #a39e8c;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 70%;\r\n  border-radius: 50%;\r\n  border: 2px solid black;\r\n  margin: auto;\r\n  display: block;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  text-align: center;\r\n  color: #533d4d;\r\n  font-size: 15px;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n  margin-top: 60px;\r\n  font-weight: 800;\r\n  text-transform: uppercase;\r\n  color: #133337;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  padding: 50px 0px;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  font-size: 20px;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport {\r\n  Container,\r\n  Description,\r\n  Image,\r\n  Name,\r\n  List,\r\n  Span,\r\n} from \"./Profile.styled\";\r\n\r\nexport default function Profile({ name, tag, location, avatar, stats }) {\r\n  return (\r\n    <Container class=\"profile\">\r\n      <Description class=\"description\">\r\n        <Image src={avatar} alt=\"Аватар пользователя\" class=\"avatar\" />\r\n        <Name>{name}</Name>\r\n        <p class=\"tag\">{tag}</p>\r\n        <p class=\"location\">{location}</p>\r\n      </Description>\r\n\r\n      <List>\r\n        <li>\r\n          <Span>Followers</Span>\r\n          <Span>{stats.followers}</Span>\r\n        </li>\r\n        <li>\r\n          <Span>Views</Span>\r\n          <Span>{stats.views}</Span>\r\n        </li>\r\n        <li>\r\n          <Span>Likes</Span>\r\n          <Span>{stats.likes}</Span>\r\n        </li>\r\n      </List>\r\n    </Container>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.section`\r\n  padding: 0;\r\n  margin: 50px auto;\r\n  border: 1px solid #717279;\r\n  width: 300px;\r\n  border-radius: 3px;\r\n  box-shadow: -1em 0 0.4em;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  border-bottom: 1px solid black;\r\n  margin: 0;\r\n  padding: 20px;\r\n  background-color: #e2eef0;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  display: flex;\r\n  padding: 20px;\r\n  margin: 0;\r\n  background-color: #70adb4;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  background-color: #e2eef0;\r\n\r\n  padding: 5px;\r\n  margin-top: 10px;\r\n  border-radius: 2px;\r\n`;\r\nexport const Span = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n`;\r\n// justify-content: space-between;\r\n","import PropTypes from \"prop-types\";\r\nimport { Container, Title, List, ListItem, Span } from \"./Statistics.styled\";\r\n\r\nexport default function Statistics({ title, stats }) {\r\n  return (\r\n    <Container>\r\n      <Title>Upload stats</Title>\r\n\r\n      <List>\r\n        {stats.map((item) => (\r\n          <ListItem key={item.id} label={item.label}>\r\n            <Span Type={item.label}>{item.label}</Span>\r\n            <Span>{item.percentage}%</Span>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Container>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  tittle: PropTypes.string,\r\n  stats: PropTypes.array.isRequired,\r\n  //   label: PropTypes.string.isRequired,\r\n  //   percentage: PropTypes.number.isRequired,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  background-color: #cec1c5;\r\n  width: 200px;\r\n\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  list-style: none;\r\n  padding: 10px 10px 20px;\r\n  box-shadow: 10px 5px 5px #898183;\r\n`;\r\nexport const ListItem = styled.li`\r\n  display: flex;\r\n\r\n  margin-top: 10px;\r\n  vertical-align: middle;\r\n  border-bottom: 1px;\r\n  padding: 20px;\r\n  background-color: #f5f2f3;\r\n`;\r\nexport const Image = styled.img`\r\n  border: 1px solid black;\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const Status = styled.span`\r\n  width: 20px;\r\n  height: 20px;\r\n\r\n  color: #141313;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { List, ListItem, Image, Name, Status } from \"./FriendList.styled\";\r\n\r\nexport default function FriendList({ friends }) {\r\n  return (\r\n    <List>\r\n      {friends.map((item) => (\r\n        <ListItem key={item.id}>\r\n          <Status>{item.isOnline}</Status>\r\n          <Image src={item.avatar} alt={item.name} width=\"48\" />\r\n          <Name>{item.name}</Name>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Table = styled.table`\r\n  border: 1px solid black;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  width: 500px;\r\n  color: white;\r\n  text-align: center;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const Title = styled.th`\r\n  color: #614c64;\r\n  background-color: #130f14;\r\n`;\r\n\r\nexport const Body = styled.tbody`\r\n  background-color: #614c64;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { Table, Body, Title } from \"./TransactionHistory.styled\";\r\n\r\nexport default function TransactionHistory({ items }) {\r\n  return (\r\n    <Table>\r\n      <thead>\r\n        <tr>\r\n          <Title>Type</Title>\r\n          <Title>Amount</Title>\r\n          <Title>Currency</Title>\r\n        </tr>\r\n      </thead>\r\n\r\n      <Body>\r\n        {items.map((item) => (\r\n          <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </Body>\r\n    </Table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  transactions: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.number.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 50px 150px;\r\n`;\r\n","// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport Profile from \"../components/Profile/Profile\";\nimport user from \"../components/user.json\";\nimport statisticalData from \"../components/statistical-data.json\";\nimport Statistics from \"../components/Statistics/Statistics\";\nimport friends from \"../components/friends.json\";\nimport FriendList from \"../components/FriendList/FriendList\";\nimport transactions from \"../components/transaction.json\";\nimport TransactionHistory from \"../components/TransactionHistory/TransactionHistory\";\nimport { Container } from \"./App.styled\";\n\nexport default function App() {\n  return (\n    <Container>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n      {/* <Statistics stats={statisticalData.stats} /> */}\n    </Container>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}