{"version":3,"sources":["reportWebVitals.js","components/Profile/Profile.styled.js","components/Profile/Profile.jsx","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.jsx","components/FriendList/FriendList.styled.js","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.styled.js","components/TransactionHistory/TransactionHistory.jsx","App/App.styled.js","App/App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Container","styled","div","Image","img","Description","Name","p","List","ul","Span","span","Profile","props","name","tag","location","avatar","stats","followers","views","likes","src","alt","section","Title","h2","ListItem","li","Math","floor","random","toString","Statistics","title","map","id","label","percentage","Type","Status","isOnline","FriendList","friends","width","Table","table","th","Body","tbody","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41a5d592.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  margin: auto;\n  padding: 50px;\n  width: 250px;\n\n  border-radius: 10%;\n  box-shadow: 5px 5px 10px #a39e8c;\n  background-color: #eae3c8;\n`;\n\nexport const Image = styled.img`\n  margin: auto;\n  width: 70%;\n  display: block;\n\n  border-radius: 50%;\n  border: 2px solid black;\n`;\n\nexport const Description = styled.div`\n  text-align: center;\n  font-size: 15px;\n  color: #533d4d;\n`;\n\nexport const Name = styled.p`\n  margin-top: 60px;\n\n  font-weight: 800;\n  text-transform: uppercase;\n  color: #133337;\n`;\n\nexport const List = styled.ul`\n  padding: 50px 0;\n\n  display: flex;\n  justify-content: space-between;\n  list-style: none;\n`;\n\nexport const Span = styled.span`\n  display: block;\n  text-align: center;\n  font-size: 20px;\n`;\n","import PropTypes from \"prop-types\";\nimport {\n  Container,\n  Description,\n  Image,\n  Name,\n  List,\n  Span,\n} from \"./Profile.styled\";\n\nconst Profile = (props) => {\n  const {\n    name,\n    tag,\n    location,\n    avatar,\n    stats: { followers, views, likes },\n  } = props;\n  return (\n    <Container>\n      <Description>\n        <Image src={avatar} alt=\"Аватар пользователя\" />\n        <Name>{name}</Name>\n        <p>@{tag}</p>\n        <p>{location}</p>\n      </Description>\n\n      <List>\n        <li>\n          <Span>Followers</Span>\n          <Span>{followers}</Span>\n        </li>\n        <li>\n          <Span>Views</Span>\n          <Span>{views}</Span>\n        </li>\n        <li>\n          <Span>Likes</Span>\n          <Span>{likes}</Span>\n        </li>\n      </List>\n    </Container>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\n\nexport default Profile;","import styled from \"@emotion/styled\";\n\nexport const Container = styled.section`\n  margin: 50px auto;\n  padding: 0;\n  width: 300px;\n\n  border: 1px solid #717279;\n  border-radius: 3px;\n  box-shadow: -1em 0 0.4em;\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n  padding: 20px;\n\n  text-align: center;\n  text-transform: uppercase;\n  border-bottom: 1px solid black;\n  background-color: #e2eef0;\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 20px;\n\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n\n  list-style: none;\n  background-color: #e7e1e8;\n`;\n\nexport const ListItem = styled.li`\n  margin-top: 10px;\n  padding: 5px;\n\n  background-color: ${random};\n  border-radius: 2px;\n`;\n\nexport const Span = styled.span`\n  display: block;\n  text-align: center;\n`;\n\nfunction random() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n","import PropTypes from \"prop-types\";\nimport { Container, Title, List, ListItem, Span } from \"./Statistics.styled\";\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <Container>\n      {title && <Title>{title}</Title>}\n\n      <List>\n        {stats.map(({ id, label, percentage }) => (\n          <ListItem key={id} label={label}>\n            <Span Type={label}>{label}</Span>\n            <Span>{percentage}%</Span>\n          </ListItem>\n        ))}\n      </List>\n    </Container>\n  );\n}\n\nStatistics.propTypes = {\n  tittle: PropTypes.string,\n  stats: PropTypes.array.isRequired,\n};\n\nexport default Statistics;","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  margin: 0 auto 30px;\n  padding: 10px 10px 20px;\n  width: 200px;\n\n  list-style: none;\n  background-color: #cec1c5;\n  box-shadow: 10px 5px 5px #898183;\n`;\n\nexport const ListItem = styled.li`\n  margin-top: 10px;\n  padding: 20px;\n  display: flex;\n\n  background-color: #f5f2f3;\n  border-bottom: 1px;\n`;\n\nexport const Image = styled.img`\n  margin-right: 10px;\n\n  border: 1px solid black;\n`;\n\nexport const Name = styled.p`\n  margin-left: 20px;\n`;\n\nexport const Status = styled.span`\n  margin: 5px;\n  width: 20px;\n  height: 20px;\n\n  border-radius: 50%;\n  background-color: ${(props) => (props.isOnline ? \"red\" : \"green\")};\n`;\n","import PropTypes from \"prop-types\";\nimport { List, ListItem, Image, Name, Status } from \"./FriendList.styled\";\n\n const FriendList = ({ friends }) => {\n  return (\n    <List>\n      {friends.map(({ id, isOnline, avatar, name }) => (\n        <ListItem key={id}>\n          <Status isOnline={isOnline}></Status>\n          <Image src={avatar} alt={name} width=\"48\" />\n          <Name>{name}</Name>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    })\n  ),\n};\n\n\nexport default FriendList;","import styled from \"@emotion/styled\";\n\nexport const Table = styled.table`\n  margin-right: auto;\n  margin-left: auto;\n  width: 500px;\n\n  text-align: center;\n  font-size: 18px;\n  border: 1px solid black;\n  color: white;\n`;\n\nexport const Title = styled.th`\n  color: #614c64;\n  background-color: #130f14;\n`;\n\nexport const Body = styled.tbody`\n  background-color: #614c64;\n`;\n","import PropTypes from \"prop-types\";\nimport { Table, Body, Title } from \"./TransactionHistory.styled\";\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <Title>Type</Title>\n          <Title>Amount</Title>\n          <Title>Currency</Title>\n        </tr>\n      </thead>\n\n      <Body>\n        {items.map(({ id, type, amount, currency }) => (\n          <tr key={id}>\n            <td>{type}</td>\n            <td>{amount}</td>\n            <td>{currency}</td>\n          </tr>\n        ))}\n      </Body>\n    </Table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.exact({\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      currency: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default TransactionHistory;","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  padding: 50px 150px;\n`;\n","import user from \"../data/user.json\";\nimport statisticalData from \"../data/statistical-data.json\";\nimport friends from \"../data/friends.json\";\nimport transactions from \"../data/transaction.json\";\nimport Profile from \"../components/Profile/Profile\";\nimport Statistics from \"../components/Statistics/Statistics\";\nimport FriendList from \"../components/FriendList/FriendList\";\nimport TransactionHistory from \"../components/TransactionHistory/TransactionHistory\";\nimport { Container } from \"./App.styled\";\n\nexport default function App() {\n  return (\n    <Container>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </Container>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}